{"version":3,"sources":["logo.svg","App.js","reportWebVitals.js","index.js"],"names":["App","useState","ip","setIp","geolocation","setGeolocation","city","country","address","setAddress","useEffect","fetch","process","then","res","json","lad","long","mapIframe","title","src","className","logo","alt","href","target","rel","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+LAAe,MAA0B,iC,eCkD1BA,MA9Cf,WAAgB,IAAD,EACOC,mBAAS,WADhB,mBACNC,EADM,KACFC,EADE,OAEyBF,mBAAS,MAFlC,mBAENG,EAFM,KAEOC,EAFP,OAGiBJ,mBAAS,CAAEK,KAAM,GAAIC,QAAS,KAH/C,mBAGNC,EAHM,KAGGC,EAHH,KAKbC,qBAAU,WACRC,MAAM,kCAAD,OAC+BC,6DAEjCC,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACE,GACLZ,EAAMY,EAAI,IACVN,EAAW,CAAEF,QAASQ,EAAI,aAAkBT,KAAMS,EAAI,OACtDV,EAAe,CAAEW,IAAKD,EAAI,SAAcE,KAAMF,EAAI,iBAErD,IAEH,IAAMG,EACW,MAAfd,EACE,wBACEe,MAAM,aACNC,IAAG,yDAAoDR,0CAApD,cAAmGR,EAAYY,IAA/G,YAAsHZ,EAAYa,QAErI,KAEN,OACE,sBAAKI,UAAU,MAAf,UACE,qBAAKD,IAAKE,EAAMD,UAAU,WAAWE,IAAI,SACzC,gCACE,6BAAKrB,IACL,6BAAKM,EAAQD,UACb,6BAAKC,EAAQF,UAEdY,EACD,mBACEG,UAAU,WACVG,KAAK,mGACLC,OAAO,SACPC,IAAI,aAJN,8BC1BSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBhB,MAAK,YAAkD,IAA/CiB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,K","file":"static/js/main.b4ecd259.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { useState, useEffect } from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\n\nfunction App() {\n  const [ip, setIp] = useState(\"0.0.0.0\");\n  const [geolocation, setGeolocation] = useState(null);\n  const [address, setAddress] = useState({ city: \"\", country: \"\" });\n\n  useEffect(() => {\n    fetch(\n      `https://api.ipdata.co/?api-key=${process.env.REACT_APP_IPDATA_API_KEY}`\n    )\n      .then((res) => res.json())\n      .then((json) => {\n        setIp(json[\"ip\"]);\n        setAddress({ country: json[\"country_name\"], city: json[\"city\"] });\n        setGeolocation({ lad: json[\"latitude\"], long: json[\"longitude\"] });\n      });\n  }, []);\n\n  const mapIframe =\n    geolocation != null ? (\n      <iframe\n        title=\"GoogleMaps\"\n        src={`https://www.google.com/maps/embed/v1/place?key=${process.env.REACT_APP_GOOGLE_MAPS_API_KEY}&q=${geolocation.lad},${geolocation.long}`}\n      />\n    ) : null;\n\n  return (\n    <div className=\"App\">\n      <img src={logo} className=\"App-logo\" alt=\"logo\" />\n      <div>\n        <h1>{ip}</h1>\n        <h2>{address.country}</h2>\n        <h4>{address.city}</h4>\n      </div>\n      {mapIframe}\n      <a\n        className=\"App-link\"\n        href=\"https://docs.google.com/document/d/1Qv61yNAizOfMb-WAPtR2NnkVBZreR6HiMXA4PgscwOM/edit?usp=sharing\"\n        target=\"_blank\"\n        rel=\"noreferrer\"\n      >\n        Ben - Resume\n      </a>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}